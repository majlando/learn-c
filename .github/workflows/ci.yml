name: CI - build & tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v4

      - name: Validate expected.txt files
        run: pwsh -NoProfile -ExecutionPolicy Bypass -File ./scripts/validate-expected.ps1

      - name: Run project tests
        run: pwsh -NoProfile -ExecutionPolicy Bypass -File ./scripts/run-project-tests.ps1

  sanitizers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang make

      - name: Build with ASAN/UBSAN and run tests
        run: |
          export CC=clang
          export CFLAGS="-fsanitize=address,undefined -fno-omit-frame-pointer -g -O1 -std=c11 -Wall -Wextra"
          # Build each project with clang and sanitizer flags when a Makefile or build.ps1 is present
          for d in projects/*; do
            if [ -f "$d/build.ps1" ]; then
              pwsh -NoProfile -ExecutionPolicy Bypass -File "$d/build.ps1" -ClangSanitize
            elif [ -f "$d/Makefile" ]; then
              (cd "$d" && make CC="$CC" CFLAGS="$CFLAGS")
            fi
          done
          done
